{"version":3,"file":"taskpane.bundle.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office */\n\nvar targetCountDict = new Map();\nvar wordCountDict = new Map();\nvar totalWordCountExcludingSelected = 0;\n\nvar ccIdToEdit;\n\nvar lastCcIdSelected = 0;\n\nvar defaultTargetCount;\nvar defaultColor;\n\nvar totalWordCountElement;\nvar colorPickerElement;\nvar defaultTargetCountElement;\n\nOffice.onReady(() => {\n  Office.addin.setStartupBehavior(Office.StartupBehavior.load);\n\n  totalWordCountElement = document.getElementById(\"word-count-num\");\n  colorPickerElement = document.getElementById(\"sectionColor\");\n  defaultTargetCountElement = document.getElementById(\"wordTargetCount\");\n\n  // Set default settings from local storage\n  defaultTargetCount = getFromLocalStorage(\"defaultTarget\");\n  defaultColor = getFromLocalStorage(\"defaultColor\");\n  if (defaultTargetCount == null){\n    defaultTargetCount = 500;\n    setInLocalStorage(\"defaultTarget\",defaultTargetCount);\n  }\n  if (defaultColor == null){\n    defaultColor = \"#F0F000\";\n    setInLocalStorage(\"defaultColor\",defaultColor);\n  }\n  defaultTargetCountElement.value = defaultTargetCount;\n  colorPickerElement.value = defaultColor;\n\n  loadAllCcTargetCounts();\n  eventSubscribe();\n});\n\n// Edit section dialog popup\nasync function editSection(event){\n  await Word.run(async (context) => {\n    try{\n      let selection = context.document.getSelection();\n      let cc = selection.parentContentControl; //catches if selection is not inside cc\n      cc.load([\"id\",\"color\"]);\n      await context.sync();\n\n      console.log(ccIdToEdit);\n      ccIdToEdit = cc.id;\n\n      // set input current values in popup\n      let sColor = cc.color;\n      let target = targetCountDict.get(cc.id);\n\n      Office.context.ui.displayDialogAsync(`https://localhost:3000/editDialog.html?color=${sColor.slice(1)}&target=${target}`, {height: 14, width: 15},  // Had to get the cc again from id within the callback event, as cannot retain cc object in both contexts, even with trackedobjects\n        function (asyncResult) {\n            let dialog = asyncResult.value;\n            dialog.addEventHandler(Office.EventType.DialogMessageReceived, \n              async function(msg){ \n                // set new values if ok btn pressed\n                if (msg.message != \"\"){\n                  let ccs = context.document.contentControls;\n                  ccs.load(\"items\");\n                  await context.sync();\n\n                  let cc = ccs.getById(ccIdToEdit);\n                  cc.load([\"color,title\"]);\n                  await context.sync();\n\n                  let newValues = JSON.parse(msg.message);\n                  // cc color\n                  cc.color = newValues[0];\n                  // target count\n                  targetCountDict.set(cc.id,newValues[1]);\n                  cc.title = wordCountDict.get(cc.id) + \" / \" + newValues[1];\n                  await context.sync();\n                }\n                dialog.close();\n              }\n            );\n        }\n      );\n    }\n    catch(err){\n      if (err.message != \"ItemNotFound\" && err.message != \"Wait until the previous call completes.\") console.log(err);\n    }\n    finally{\n      event.completed();\n    }\n  });\n}\n\n// load CC target and wordcount info from all CC titles\nasync function loadAllCcTargetCounts(){\n  await Word.run(async (context) => {\n    var totalWordCount = 0;\n\n    contentControls = context.document.contentControls;\n    contentControls.load(\"items\");\n    await context.sync();\n\n    let ccs = contentControls.items;\n    for (i=0; i<ccs.length; i++){\n      try{\n        let countAndTargetCount = ccs[i].title.split(\" / \");\n        wordCountDict.set(ccs[i].id,Number(countAndTargetCount[0]));\n        targetCountDict.set(ccs[i].id,Number(countAndTargetCount[1]));\n        totalWordCount += Number(countAndTargetCount[0]);\n      }\n      catch(err){console.error(err);}\n    }\n    totalWordCountElement.innerHTML = totalWordCount;\n  }); \n}\n\nasync function eventSubscribe(){\n  await Word.run(async (context) => {\n    var events = setInterval(\n      checkForCcChanges,\n      250,\n    );\n  });  \n}\n\n// allow subsections?\n// checks for wordcount changes periodically in all CCs\nasync function checkForCcChanges(){\n  await Word.run(async (context) => {\n    try{\n      let selection = context.document.getSelection();\n      let cc = selection.parentContentControl; //catches if selection is not inside cc\n      \n      cc.load([\"id\",\"text\",\"title\"]);\n      await context.sync();\n\n      // recalculate totalwordcountexcludingselected if selected cc changes\n      if (cc.id != lastCcIdSelected) await selectedCcChanged(cc.id);\n\n      let wordTargetCount = String(targetCountDict.get(cc.id));\n      let words = splitWords(cc.text);\n      let wordCount = words.length;\n\n      if (wordCount!=wordCountDict.get(cc.id)) { // if there has been a change in wordcount\n        wordCountDict.set(cc.id,wordCount);\n        totalWordCountElement.innerHTML = totalWordCountExcludingSelected+wordCount;\n\n        lastCcIdSelected = cc.id;\n\n        // Update Title Information\n        if (wordCount>=0 && wordTargetCount>0) {\n          let newtitle = wordCount + \" / \" + wordTargetCount;\n          if (newtitle != cc.title) cc.title = newtitle;\n          await context.sync();\n        }\n      }\n\n      // Over-limit red highlight\n      if (wordCount>wordTargetCount){\n        let range = cc.getRange();\n\n        let wordRanges = range.split([\" \"],false,true,true);\n        context.load(wordRanges,\"items\");\n        await context.sync();\n\n        let wordsOverLimitRanges = wordRanges.items.slice(wordTargetCount);\n        for (r=0;r<wordsOverLimitRanges.length;r++){\n          wordsOverLimitRanges[r].font.color = \"red\";\n        }\n\n        await context.sync();\n      }\n    }\n    catch(err){\n      lastCcIdSelected=null;\n      if (err.message != \"ItemNotFound\" && err.message != \"Wait until the previous call completes.\") console.log(err);\n    }\n  });\n}\n\nasync function addSection(event) {\n  try{\n      await Word.run(async (context) => {\n        var selectedRange = context.document.getSelection();\n        let parent = selectedRange.parentContentControlOrNullObject;\n        await context.sync();\n        \n        let cc;\n\n        // If CC parent, insert new CC after parent CC\n        var isParentCc = !parent.isNullObject;\n        if (!isParentCc){ \n          cc = selectedRange.insertContentControl();\n        }\n        else{\n          let ccMarker = parent.parentBody.getRange(\"Whole\").insertText(\"\\n\",\"After\");\n          cc = ccMarker.insertContentControl();\n        }\n\n        cc.appearance = Word.ContentControlAppearance.boundingBox;\n        cc.color = defaultColor;\n        \n        // Load into context and sync\n        context.load(selectedRange, \"text\");\n        context.load(cc,\"id\");\n        await context.sync();\n\n        targetCountDict.set(cc.id,String(defaultTargetCount));\n\n        if (selectedRange.text.length < 2 && !isParentCc){\n          selectedRange.insertText(\"\\n\",\"Before\");\n        }\n\n        // Register event handlers\n        cc.onDeleted.add(contentControlDeleted);\n        cc.track();\n        await context.sync();\n      });\n    event.completed();\n  }\n  catch(err){\n    console.error(err);\n  }\n  finally{\n    event.completed();\n  }\n}\n\nasync function contentControlDeleted(event) {\n  await Word.run(async (context) => {\n    let wc = wordCountDict.get(event.ids[0])\n    totalWordCountElement.innerHTML = Number(totalWordCountElement.innerHTML)-wc;\n    totalWordCountExcludingSelected -= wc;\n    wordCountDict.delete(event.ids[0]);\n    event.completed();\n  });\n}\n\nasync function selectedCcChanged(id) { // this saves processing time by summing all wordCounts when selected cc is changed\n  await Word.run(async (context) => {  // so that when changes are made it only has to sum the changed wordCount to the precalced value\n    let sum = 0; \n    wordCountDict.forEach((value,key) => {\n      if (key != id) sum+=value;\n    })                    \n    totalWordCountExcludingSelected = sum;\n  });\n}\n\nasync function changeDefaultColor(){\n  await Word.run(async (context) => {\n    defaultColor = colorPickerElement.value;\n    setInLocalStorage(\"defaultColor\",defaultColor);\n  });\n}\n\nasync function changeDefaultTargetCount(){\n  let newVal = defaultTargetCountElement.value;\n  if (!(newVal>=5)) defaultTargetCountElement.value=5;\n  else defaultTargetCount = newVal;\n  setInLocalStorage(\"defaultTarget\",defaultTargetCount);\n}\n\nfunction splitWords(text){\n  text = text.trim();\n  if (text===\"\") return [];\n  return text.split(/\\s+/);\n}\n\nfunction setInLocalStorage(key, value) {\n  const myPartitionKey = Office.context.partitionKey;\n\n  // Check if local storage is partitioned. \n  // If so, use the partition to ensure the data is only accessible by your add-in.\n  if (myPartitionKey) {\n    localStorage.setItem(myPartitionKey + key, value);\n  } else {\n    localStorage.setItem(key, value);\n  }\n}\n\nfunction getFromLocalStorage(key) {\n  const myPartitionKey = Office.context.partitionKey;\n\n  // Check if local storage is partitioned.\n  if (myPartitionKey) {\n    return localStorage.getItem(myPartitionKey + key);\n  } else {\n    return localStorage.getItem(key);\n  }\n}\n\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","defaultTargetCount","defaultColor","totalWordCountElement","colorPickerElement","defaultTargetCountElement","targetCountDict","Map","wordCountDict","totalWordCountExcludingSelected","lastCcIdSelected","_loadAllCcTargetCounts","_callee5","_context5","Word","run","_ref3","_callee4","context","totalWordCount","ccs","countAndTargetCount","_context4","contentControls","document","load","sync","items","title","split","set","id","Number","err","console","error","innerHTML","_x7","_eventSubscribe","_callee7","_context7","_ref4","_callee6","_context6","setInterval","checkForCcChanges","_x8","_checkForCcChanges","_callee9","_context9","_ref5","_callee8","selection","cc","wordTargetCount","words","wordCount","newtitle","range","wordRanges","wordsOverLimitRanges","_context8","getSelection","parentContentControl","selectedCcChanged","String","get","text","trim","getRange","font","color","t0","message","log","_x9","_x4","_selectedCcChanged","_callee15","_context15","_ref8","_callee14","sum","_context14","key","_x12","setInLocalStorage","myPartitionKey","Office","partitionKey","localStorage","setItem","getFromLocalStorage","getItem","onReady","addin","setStartupBehavior","StartupBehavior","getElementById","loadAllCcTargetCounts","eventSubscribe"],"sourceRoot":""}